
## constructor exceptions 

# cert path is empty
certpathreviewer.emptycertpath.title = certpath is empty
certpathreviewer.emptycertpath.text = pkixcertpathreviewer: the certpath is empty.
certpathreviewer.emptycertpath.summary = pkixcertpathreviewer: the certpath is empty.
certpathreviewer.emptycertpath.details = pkixcertpathreviewer: the certpath is empty.

## name constraints processing errors

# cert dn is not in the permitted tree
# {0} dn as string 
certpathreviewer.notpermitteddn.title = name constraint error: certificate dn is not permitted
certpathreviewer.notpermitteddn.text = name constraint error: the certificate dn {0} is not permitted.
certpathreviewer.notpermitteddn.summary = name constraint error: certificate dn is not permitted.
certpathreviewer.notpermitteddn.details = name constraint checking error. the certificate dn {0} is not in the permitted set of dns.

# cert dn is in the excluded tree
# {0} dn as string
certpathreviewer.excludeddn.title = name constraint error: certificate dn is excluded
certpathreviewer.excludeddn.text = name constraint error: the certificate dn {0} is excluded.
certpathreviewer.excludeddn.summary = name constraint error: certificate dn is excluded.
certpathreviewer.excludeddn.details = name constraint checking error. the certificate dn {0} is inside of the excluded set of dns.

# cert email is not in the permitted tree
# {0} email address as string
certpathreviewer.notpermittedemail.title = name constraint error: not permitted email address
certpathreviewer.notpermittedemail.text = name constraint error: certificate contains the not permitted email address {0}.
certpathreviewer.notpermittedemail.summary = name constraint error: not permitted email address.
certpathreviewer.notpermittedemail.details = name constraint checking error. the certificate contains the email address {0} which is not in the permitted set of email addresses.

# cert email is in the excluded tree
# {0} email as string
certpathreviewer.excludedemail.title = name constraint error: excluded email address
certpathreviewer.excludedemail.text = name constraint error: certificate contains the excluded email address {0}. 
certpathreviewer.excludedemail.summary = name constraint error: excluded email address.
certpathreviewer.excludedemail.details = name constraint checking error. the certificate contains the email address {0} which is in the excluded set of email addresses.

# cert ip is not in the permitted tree
# {0} ip address as string
certpathreviewer.notpermittedip.title = name constraint error: not permitted ip address
certpathreviewer.notpermittedip.text = name constraint error: certificate contains the not permitted ip address {0}.
certpathreviewer.notpermittedip.summary = name constraint error: not permitted ip address.
certpathreviewer.notpermittedip.details = name constraint checking error. the certificate contains the ip address {0} which is not in the permitted set of ip addresses.

# cert ip is in the excluded tree
# {0} ip address as string
certpathreviewer.excludedip.title = name constraint error: excluded ip address
certpathreviewer.excludedip.text = name constraint error: certificate contains the excluded ip address {0}.
certpathreviewer.excludedip.summary = name constraint error: excluded ip address.
certpathreviewer.excludedip.details = name constraint checking error. the certificate contains the ip address {0} which is in the excluded set of ip addresses.

# error processing the name constraints extension
certpathreviewer.ncexterror.title = name constraint checking failed
certpathreviewer.ncexterror.text = name constraint checking failed: there was an error processing the name constraints extension of the certificate.
certpathreviewer.ncexterror.summary = error processing the name constraints extension.
certpathreviewer.ncexterror.details = name constraint checking failed: there was an error processing the name constraints extension of the certificate.

# error processing the subject alternative name extension
certpathreviewer.subjaltnameexterror.title = name constraint checking failed
certpathreviewer.subjaltnameexterror.text = name constraint checking failed: there was an error processing the subject alternative name extension of the certificate.
certpathreviewer.subjaltnameexterror.summary = error processing the subject alternative name extension.
certpathreviewer.subjaltnameexterror.details = name constraint checking failed: there was an error processing the subject alternative name extension of the certificate.

# exception extracting subject name when checking subtrees
# {0} subject principal
certpathreviewer.ncsubjectnameerror.title = name constraint checking failed
certpathreviewer.ncsubjectnameerror.text = name constraint checking failed: there was an exception extracting the dn from the certificate.
certpathreviewer.ncsubjectnameerror.summary = name constraint checking failed: exception extracting the dn.
certpathreviewer.ncsubjectnameerror.details = name constraint checking failed: there was an exception extracting the dn from the certificate.


## path length errors

# max path length extended
certpathreviewer.pathlenghtextended.title = maximum path length extended 
certpathreviewer.pathlenghtextended.text = certificate path invalid: maximum path length extended.
certpathreviewer.pathlenghtextended.summary = certificate path invalid: maximum path length extended.
certpathreviewer.pathlenghtextended.details = certificate path invalid: maximum path length extended.

# error reading length constraint from basic constraint extension
certpathreviewer.processlengthconsterror.title = path length checking failed
certpathreviewer.processlengthconsterror.text = path length checking failed: there was an error processing the basic constraint extension of the certificate. 
certpathreviewer.processlengthconsterror.summary = error processing the subject alternative name extension.
certpathreviewer.processlengthconsterror.details = path length checking failed: there was an error processing the basic constraint extension of the certificate.


## path length notifications

# total path length as defined in rfc 3280
# {0} the path length as integer
certpathreviewer.totalpathlength.title = total path length
certpathreviewer.totalpathlength.text = the total path length without self-signed certificates is {0}.
certpathreviewer.totalpathlength.summary = the total path length without self-signed certificates is {0}.
certpathreviewer.totalpathlength.details = the total path length without self-signed certificates, as defined in rfc 3280, is {0}.


## critical extensions errors

# one unknown critical extension
# {0} extension as string
certpathreviewer.unknowncriticalext.title = unknown critical extension
certpathreviewer.unknowncriticalext.text = the certificate contains the unknown critical extension {0}.
certpathreviewer.unknowncriticalext.summary = unknown critical extension: {0}.
certpathreviewer.unknowncriticalext.details = the certificate contains the unknown critical extension with the oid {0}.

# more unknown critical extensions
# {0} extensions as set of strings
certpathreviewer.unknowncriticalexts.title = unknown critical extensions
certpathreviewer.unknowncriticalexts.text = the certificate contains two or more unknown critical extensions: {0}.
certpathreviewer.unknowncriticalexts.summary = unknown critical extensions: {0}.
certpathreviewer.unknowncriticalexts.details = the certificate contains two or more unknown critical extensions with the oids: {0}.

# error processing critical extension
# {0} the message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
certpathreviewer.criticalextensionerror.title = error processing a critical extension
certpathreviewer.criticalextensionerror.text = error processing a critical extension. a {0} occurred.
certpathreviewer.criticalextensionerror.summary = error processing a critical extension. a {0} occurred.
certpathreviewer.criticalextensionerror.details = error processing a critical extension. a {0} occurred. cause: {0}.

# error initializing the certpath checkers
# {0} the message of the underlying exception
# {1} the underlying exception
# {2} the name of the exception
certpathreviewer.certpathcheckererror.title = checking critical extensions failed
certpathreviewer.certpathcheckererror.text = checking critical extensions failed: there was a {2} initializing a certpathchecker.
certpathreviewer.certpathcheckererror.summary = checking critical extensions failed: {2} initializing a certpathchecker
certpathreviewer.certpathcheckererror.details = checking critical extensions failed: there was an {2} initializing a certpathchecker. cause: {0}


## check signature errors

certpathreviewer.rootkeyisvalidbutnotatrustanchor.title = root key with valid signature but no trust anchor
certpathreviewer.rootkeyisvalidbutnotatrustanchor.text = the certificate has a valid signature, but is no trust anchor
certpathreviewer.rootkeyisvalidbutnotatrustanchor.summary = the certificate has a valid signature, but is no trust anchor
certpathreviewer.rootkeyisvalidbutnotatrustanchor.details = the certificate has a valid signature, but is no trust anchor

# trustanchor found, but certificate validation failed
certpathreviewer.trustbutinvalidcert.title = trust anchor found, but different public key
certpathreviewer.trustbutinvalidcert.text = a trust anchor was found. but it has a different public key, than was used to issue the first certificate of the cert path.
certpathreviewer.trustbutinvalidcert.summary = a trust anchor was found. but it has a different public key, than was used to issue the first certificate of the cert path.
certpathreviewer.trustbutinvalidcert.details = a trust anchor was found. but it has a different public key, than was used to issue the first certificate of the cert path.

# trustanchor - cannot extract issuer
certpathreviewer.trustanchorissuererror.title = finding trust anchor failed 
certpathreviewer.trustanchorissuererror.text = finding trust anchor failed: cannot extract issuer from certificate.
certpathreviewer.trustanchorissuererror.summary = finding trust anchor failed: cannot extract issuer from certificate.
certpathreviewer.trustanchorissuererror.details = finding trust anchor failed: cannot extract issuer from certificate.

# no trustanchor was found for the certificate path
# {0} issuer of the root certificate of the path
# {1} number of trusted root certificates (trustanchors) provided
certpathreviewer.notrustanchorfound.title = no trusted root certificate found
certpathreviewer.notrustanchorfound.text = the root certificate of the certificate path was issued by a ca that is not in the the trusted-root-certificate-store used for the path validation. the name of the ca is "{0}".
certpathreviewer.notrustanchorfound.summary = the root certificate of the certificate path was issued by a ca that is not in the the trusted-root-certificate-store used for the path validation.
certpathreviewer.notrustanchorfound.details = the root certificate of the certificate path was issued by a ca that is not in the the trusted-root-certificate-store used for the path validation. the name of the ca is "{0}". the trusted-root-certificate store contains {1} ca(s).

# conflicting trust anchors
# {0} number of trustanchors found (integer)
# {1} the ca name
certpathreviewer.conflictingtrustanchors.title = corrupt trust root store
certpathreviewer.conflictingtrustanchors.text = warning: corrupt trust root store: there are {0} trusted public keys for the ca "{1}" - please ensure with ca which is the correct key.
certpathreviewer.conflictingtrustanchors.summary = warning: corrupt trust root store: there are {0} trusted public keys for the ca "{1}" - please ensure with ca which is the correct key.
certpathreviewer.conflictingtrustanchors.details = warning: corrupt trust root store: there are {0} trusted public keys for the ca "{1}" - please ensure with ca which is the correct key.

# trustanchor dn is invalid
# {0} dn of the trustanchor
certpathreviewer.trustdninvalid.title = dn of trustanchor is improperly specified
certpathreviewer.trustdninvalid.text = the dn of the trustanchor is improperly specified: {0}.
certpathreviewer.trustdninvalid.summary = the dn of the trustanchor is improperly specified.
certpathreviewer.trustdninvalid.details = the dn of the trustanchor is improperly specified: {0}. it's not a valid x.500 name. see rfc 1779 or rfc 2253. 

# trustanchor public key algorithm error
certpathreviewer.trustpubkeyerror.title = error processing public key of the trust anchor
certpathreviewer.trustpubkeyerror.text = error processing public key of the trust anchor.
certpathreviewer.trustpubkeyerror.summary = error processing public key of the trust anchor.
certpathreviewer.trustpubkeyerror.details = error processing public key of the trust anchor. could not extract the alorithmidentifier for the key.

# can not verifiy signature: issuer public key unknown
certpathreviewer.noissuerpublickey.title = can not verify the certificate signature 
certpathreviewer.noissuerpublickey.text = can not verify the certificate signature: issuer public key is unknown.
certpathreviewer.noissuerpublickey.summary = can not verify the certificate signature: issuer public key is unknown.
certpathreviewer.noissuerpublickey.details = can not verify the certificate signature: issuer public key is unknown.

# signature can not be verified
# {0} message of the underlying exception (english)
# {1} the underlying exception
# {2} the name of the exception
certpathreviewer.signaturenotverified.title = certificate signature invalid
certpathreviewer.signaturenotverified.text = the certificate signature is invalid. a {2} occurred.
certpathreviewer.signaturenotverified.summary = the certificate signature is invalid.
certpathreviewer.signaturenotverified.details = the certificate signature is invalid. a {2} occurred. cause: {0}

# certificate expired
# {0} the date the certificate expired 
certpathreviewer.certificateexpired.title = certificate is expired
certpathreviewer.certificateexpired.text = could not validate the certificate. certificate expired on {0,date} {0,time,full}.
certpathreviewer.certificateexpired.summary = certificate expired on {0,date} {0,time,full}.
certpathreviewer.certificateexpired.details = could not validate the certificate. certificate expired on {0,date} {0,time,full}. 

# certificate not yet valid
# {0} the date from which on the certificate is valid
certpathreviewer.certificatenotyetvalid.title = certificate is not yet valid
certpathreviewer.certificatenotyetvalid.text = could not validate the certificate. certificate is not valid until {0,date} {0,time,full}.
certpathreviewer.certificatenotyetvalid.summary = certificate is not valid until {0,date} {0,time,full}.
certpathreviewer.certificatenotyetvalid.details = could not validate the certificate. certificate is not valid until {0,date} {0,time,full}. 

# certificate invalid issuer dn
# {0} expected issuer dn as string
# {1} found issuer dn as string
certpathreviewer.certwrongissuer.title = issuer of certificate not valid
certpathreviewer.certwrongissuer.text = issuer of certificate is not valid. expected {0}, but found {1}. 
certpathreviewer.certwrongissuer.summary = issuer of certificate is not valid. 
certpathreviewer.certwrongissuer.details = issuer of certificate is not valid. expected {0}, but found {1}.

# intermediate certificate is no ca cert
certpathreviewer.nocacert.title = certificate is no ca certificate
certpathreviewer.nocacert.text = intermediate certificate is no ca certificate.
certpathreviewer.nocacert.summary = the certificate is no ca certificate.
certpathreviewer.nocacert.details = the certificate is no ca certificate but used as one.

# cert laks basic constraints
certpathreviewer.nobasicconstraints.title = certificate has no basic constraints
certpathreviewer.nobasicconstraints.text = intermediate certificate has no basic constraints.
certpathreviewer.nobasicconstraints.summary = intermediate certificate has no basic constraints.
certpathreviewer.nobasicconstraints.details = intermediate certificate has no basic constraints.

# error processing basic constraints
certpathreviewer.errorprocesingbc.title = error processing the basic constraints extension
certpathreviewer.errorprocesingbc.text = there was an error while processing the basic constraints extension of this certificate.
certpathreviewer.errorprocesingbc.summary = error processing the basic constraints extension. 
certpathreviewer.errorprocesingbc.details = there was an error while processing the basic constraints extension of this certificate.

# certificate not usable for signing certs
certpathreviewer.nocertsign.title = key not usable for signing certificates
certpathreviewer.nocertsign.text = the key usage constraint does not allow the use of this certificate key for signing certificates.
certpathreviewer.nocertsign.summary = the certificate key can not be used for signing certificates.
certpathreviewer.nocertsign.details = the key usage constraint does not allow the use of this certificate key for signing certificates.

# error processing public key
certpathreviewer.pubkeyerror.title = error processing public key
certpathreviewer.pubkeyerror.text = error processing public key of the certificate.
certpathreviewer.pubkeyerror.summary = error processing public key of the certificate.
certpathreviewer.pubkeyerror.details = error processing public key of the certificate. could not extract the alorithmidentifier for the key.


## check signatures notifications

#
# trust anchor has no keyusage certsign
certpathreviewer.trustkeyusage.title = trust anchor key usage
certpathreviewer.trustkeyusage.text = the trust anchor is not alloed to sign certificates. 
certpathreviewer.trustkeyusage.summary = the trust anchor is not alloed to sign certificates.
certpathreviewer.trustkeyusage.details = the trust anchor is not alloed to sign certificates.

# certificate path validation date
# {0} date for which the cert path is validated
# {1} current date
certpathreviewer.certpathvaliddate.title = certificate path validation date
certpathreviewer.certpathvaliddate.text = the certificate path was applied on {0,date} {0,time,full}. it was checked at {1,date} {1,time,full}.
certpathreviewer.certpathvaliddate.summary = the certificate path was validated for {0,date} {0,time,full}. it was checked at {1,date} {1,time,full}.
certpathreviewer.certpathvaliddate.details = the certificate path was validated for {0,date} {0,time,full}. it was checked at {1,date} {1,time,full}.


## check policy errors

# error processing certificate policy extension
certpathreviewer.policyexterror.title = policy checking failed
certpathreviewer.policyexterror.text = policy checking failed: there was an error processing the certificate policy extension. 
certpathreviewer.policyexterror.summary = error processing the certificate policy extension.
certpathreviewer.policyexterror.details = policy checking failed: there was an error processing the certificate policy extension. 

# error processing policy constraints extension
certpathreviewer.policyconstexterror.title = policy checking failed
certpathreviewer.policyconstexterror.text = policy checking failed: there was an error processing the policy constraints extension.
certpathreviewer.policyconstexterror.summary = error processing the policy constraints extension.
certpathreviewer.policyconstexterror.details = policy checking failed: there was an error processing the policy constraints extension.

# error processing policy mapping extension
certpathreviewer.policymapexterror.title = policy checking failed
certpathreviewer.policymapexterror.text = policy checking failed: there was an error processing the policy mapping extension.
certpathreviewer.policymapexterror.summary = error processing the policy mapping extension.
certpathreviewer.policymapexterror.details = policy checking failed: there was an error processing the policy mapping extension.

# error processing inhibit any policy extension
certpathreviewer.policyinhibitexterror.title = policy checking failed
certpathreviewer.policyinhibitexterror.text = policy checking failed: there was an error processing the inhibit any policy extension.
certpathreviewer.policyinhibitexterror.summary = error processing the inhibit any policy extension.
certpathreviewer.policyinhibitexterror.details = policy checking failed: there was an error processing the inhibit any policy extension.

# error building qualifier set
certpathreviewer.policyqualifiererror.title = policy checking failed
certpathreviewer.policyqualifiererror.text = policy checking failed: error building the policy qualifier set.
certpathreviewer.policyqualifiererror.summary = policy checking failed: error building the policy qualifier set.
certpathreviewer.policyqualifiererror.details = policy checking failed: error building the policy qualifier set.

# no valid policy tree - explicit policy required
certpathreviewer.novalidpolicytree.title = policy checking failed
certpathreviewer.novalidpolicytree.text = policy checking failed: no valid policy tree found when one expected.
certpathreviewer.novalidpolicytree.summary = policy checking failed: no valid policy tree found when one expected.
certpathreviewer.novalidpolicytree.details = policy checking failed: no valid policy tree found when one expected.

# expicit policy requested, but no policy available
certpathreviewer.explicitpolicy.title = policy checking failed
certpathreviewer.explicitpolicy.text = policy checking failed: explicit policy requested but no policy available.
certpathreviewer.explicitpolicy.summary = policy checking failed: explicit policy requested but no policy available.
certpathreviewer.explicitpolicy.details = policy checking failed: explicit policy requested but no policy available.

# path processing failed on policy
certpathreviewer.invalidpolicy.title = path processing failed on policy
certpathreviewer.invalidpolicy.text = path processing failed on policy.
certpathreviewer.invalidpolicy.summary = path processing failed on policy.
certpathreviewer.invalidpolicy.details = path processing failed on policy.

# invalid policy mapping
certpathreviewer.invalidpolicymapping.title = invalid policy mapping 
certpathreviewer.invalidpolicymapping.text = certificate contains an invalid policy mapping.
certpathreviewer.invalidpolicymapping.summary = certificate contains an invalid policy mapping. 
certpathreviewer.invalidpolicymapping.details = certificate contains a policy mapping including the value any policy which is invalid.

## check crl notifications

# found local valid crl
# {0} thisupdate of the crl
# {1} nextupdate of the crl
certpathreviewer.localvalidcrl.title = found valid local crl
certpathreviewer.localvalidcrl.text = found a valid crl in local certstore. issued on {0,date}, next update {1,date}.
certpathreviewer.localvalidcrl.summary = found a valid crl in local certstore. issued on {0,date}, next update {1,date}.
certpathreviewer.localvalidcrl.details = found a valid crl in local certstore. issued on {0,date}, next update {1,date}.


# found matching crl, but not valid
# {0} thisupdate of the crl
# {1} nextupdate of the crl
certpathreviewer.localinvalidcrl.title = local crl outdated
certpathreviewer.localinvalidcrl.text = did not use a matching crl in a local certstore, because it is outdated. issued on {0,date}, next update {1,date}.
certpathreviewer.localinvalidcrl.summary = did not use a matching crl in a local certstore, because it is outdated. issued on {0,date}, next update {1,date}.
certpathreviewer.localinvalidcrl.details = did not use a matching crl in a local certstore, because it is outdated. issued on {0,date}, next update {1,date}.

# found a valid crl at crl distribution point
# {0} thisupdate of the crl
# {1} nextupdate of the crl
# {2} the url of the distribution point
certpathreviewer.onlinevalidcrl.title = found valid crl at crl distribution point
certpathreviewer.onlinevalidcrl.text = found a valid crl at: {2}. issued on {0,date}, next update on {1,date}.
certpathreviewer.onlinevalidcrl.summary = found a valid crl at: {2}. issued on {0,date}, next update on {1,date}.
certpathreviewer.onlinevalidcrl.details = found a valid crl at: {2}. issued on {0,date}, next update on {1,date}.

# found an invalid crl at crl distribution point
# {0} thisupdate of the crl
# {1} nextupdate of the crl
# {2} the url of the distribution point
certpathreviewer.onlineinvalidcrl.title = outdated crl at crl distribution point
certpathreviewer.onlineinvalidcrl.text = the crl loaded from {2} was outdated. issued on {0,date}, next update on {1,date}.
certpathreviewer.onlineinvalidcrl.summary = the crl loaded from {2} was outdated. issued on {0,date}, next update on {1,date}.
certpathreviewer.onlineinvalidcrl.details = the crl loaded from {2} was outdated. issued on {0,date}, next update on {1,date}.

#found a crl at a crl distribution point, but issued by another ca
# {0} issuer of the crl
# {1} expected issuer
# {2} the url of the distribution point
certpathreviewer.onlinecrlwrongca.title = crl from wrong issuer at crl distribution point
certpathreviewer.onlinecrlwrongca.text = the crl loaded from {2} has was issued by {0}, excpected {1}.
certpathreviewer.onlinecrlwrongca.summary = the crl loaded from {2} has a wrong issuer.
certpathreviewer.onlinecrlwrongca.details = the crl loaded from {2} has was issued by {0}, excpected {1}.

# certificate not revoked
certpathreviewer.notrevoked.title = certificate not revoked
certpathreviewer.notrevoked.text = the certificate was not revoked.
certpathreviewer.notrevoked.summary = the certificate was not revoked.
certpathreviewer.notrevoked.details = the certificate was not revoked.

# crl found: certificate was revoked, but after the validationdate
# {0} the date the certificate was revoked
# {1} the reason for revoking the certificate
certpathreviewer.revokedaftervalidation.title = certificate was revoked after the validation date
certpathreviewer.revokedaftervalidation.text = the certificate was revoked after the validation date at {0,date} {0,time,full}. reason: {1}.
certpathreviewer.revokedaftervalidation.summary = the certificate was revoked after the validation date at {0,date} {0,time,full}.
certpathreviewer.revokedaftervalidation.details = the certificate was revoked after the validation date at {0,date} {0,time,full}. reason: {1}.

# updated crl available
# {0} date since when the update is available
certpathreviewer.crlupdateavailable.title = crl update available
certpathreviewer.crlupdateavailable.text = an update for the crl of this certificate is available since {0,date} {0,time,full}.
certpathreviewer.crlupdateavailable.summary = an update for the crl of this certificate is available since {0,date} {0,time,full}.
certpathreviewer.crlupdateavailable.details = an update for the crl of this certificate is available since {0,date} {0,time,full}.

# crl distribution point url
# {0} the crl distribution point url as string
certpathreviewer.crldistpoint.title = crl distribution point
certpathreviewer.crldistpoint.text = a crl can be obtained from: {0}.
certpathreviewer.crldistpoint.summary = a crl can be obtained from: {0}.
certpathreviewer.crldistpoint.details = a crl can be obtained from: {0}.

# ocsp location
# {0} the url on which the ocsp service can be found
certpathreviewer.ocsplocation.title = ocsp responder location
certpathreviewer.ocsplocation.text = ocsp responder location: {0}.
certpathreviewer.ocsplocation.summary = ocsp responder location: {0}.
certpathreviewer.ocsplocation.details = ocsp responder location: {0}.

# unable to get crl from crl distribution point
# {0} the url of the distribution point
# {1} the message of the occurred exception
# {2} the occurred exception
# {3} the name of the exception
certpathreviewer.loadcrldistpointerror.title = cannot load crl from crl distribution point
certpathreviewer.loadcrldistpointerror.text = unable to load a crl from: {0}. a {3} occurred.
certpathreviewer.loadcrldistpointerror.summary = unable to load a crl from: {0}. a {3} occurred.
certpathreviewer.loadcrldistpointerror.details = unable to load a crl from: {0}. a {3} occurred. cause: {1}.

# no crl found in certstores
# {0} the issuers which we searched for
# {1} list of crl issuer names that are found in the certstores
# {2} number of crls in the certstores
certpathreviewer.nocrlincertstore.title = no matching crl found in local crl store
certpathreviewer.nocrlincertstore.text = no matching crl was found in the provided local crl store.
certpathreviewer.nocrlincertstore.summary = no matching crl was found in the provided local crl store.
certpathreviewer.nocrlincertstore.details = no matching crl was found in the provided local crl store. \
no crl was found for the selector "{0}". the {2} crl(s) in the certstores are from "{1}".


## check crl exceptions

# cannot extract issuer from certificate
certpathreviewer.crlissuerexception.title = crl checking failed
certpathreviewer.crlissuerexception.text = crl checking failed: cannot extract issuer from certificate.
certpathreviewer.crlissuerexception.summary = crl checking failed: cannot extract issuer from certificate.
certpathreviewer.crlissuerexception.details = crl checking failed: cannot extract issuer from certificate.

# cannot extract crls
# {0} message from the underlying exception
# {1} the underlying exception
# {2} the name of the exception
certpathreviewer.crlextractionerror.title = crl checking failed
certpathreviewer.crlextractionerror.text = crl checking failed: cannot extract crl from certstore. there was a {2}.
certpathreviewer.crlextractionerror.summary = crl checking failed: cannot extract crl from certstore. there was a {2}.
certpathreviewer.crlextractionerror.details = crl checking failed: cannot extract crl from certstore. there was a {2}. cause: {0}.

# issuer certificate key usage extension does not permit crl signing
certpathreviewer.nocrlsigningpermited.title = crl checking failed
certpathreviewer.nocrlsigningpermited.text = crl checking failed: issuer certificate does not permit crl signing.
certpathreviewer.nocrlsigningpermited.summary = crl checking failed: issuer certificate does not permit crl signing.
certpathreviewer.nocrlsigningpermited.details = crl checking failed: issuer certificate does not permit crl signing.

# can not verify crl: issuer public key unknown
certpathreviewer.crlnoissuerpublickey.title = crl checking failed
certpathreviewer.crlnoissuerpublickey.text = crl checking failed: can not verify the crl: issuer public key is unknown.
certpathreviewer.crlnoissuerpublickey.summary = crl checking failed: can not verify the crl: issuer public key is unknown.
certpathreviewer.crlnoissuerpublickey.details = crl checking failed: can not verify the crl: issuer public key is unknown.

# crl verification failed
certpathreviewer.crlverifyfailed.title = crl checking failed
certpathreviewer.crlverifyfailed.text = crl checking failed: crl signature is invalid.
certpathreviewer.crlverifyfailed.summary = crl checking failed: crl signature is invalid.
certpathreviewer.crlverifyfailed.details = crl checking failed: crl signature is invalid.

# no valid crl found
certpathreviewer.novalidcrlfound.title = crl checking failed
certpathreviewer.novalidcrlfound.text = crl checking failed: no valid crl found.
certpathreviewer.novalidcrlfound.summary = crl checking failed: no valid crl found.
certpathreviewer.novalidcrlfound.details = crl checking failed: no valid crl found.

# no base crl for delta crl
certpathreviewer.nobasecrl.title = crl checking failed
certpathreviewer.nobasecrl.text = crl checking failed: no base crl found for delta crl.
certpathreviewer.nobasecrl.summary = crl checking failed: no base crl found for delta crl.
certpathreviewer.nobasecrl.details = crl checking failed: no base crl found for delta crl.

# certificate revoked
# {0} the date the certificate was revoked
# {1} the reason for revoking the certificate
certpathreviewer.certrevoked.title = certificate was revoked
certpathreviewer.certrevoked.text = the certificate was revoked at {0,date} {0,time,full}. reason: {1}.
certpathreviewer.certrevoked.summary = the certificate was revoked at {0,date} {0,time,full}.
certpathreviewer.certrevoked.details = the certificate was revoked at {0,date} {0,time,full}. reason: {1}.

# error processing issuing distribution point extension
certpathreviewer.distrptexterror.title = crl checking failed
certpathreviewer.distrptexterror.text = crl checking failed: there was an error processing the issuing distribution point extension. 
certpathreviewer.distrptexterror.summary = error processing the issuing distribution point extension.
certpathreviewer.distrptexterror.details = crl checking failed: there was an error processing the issuing distribution point extension.

# error processing crl distribution points extension
certpathreviewer.crldistptexterror.title = crl checking failed
certpathreviewer.crldistptexterror.text = crl checking failed: there was an error processing the crl distribution points extension.
certpathreviewer.crldistptexterror.summary = error processing the crl distribution points extension.
certpathreviewer.crldistptexterror.details = crl checking failed: there was an error processing the crl distribution points extension.

# error processing the authority info access extension
certpathreviewer.crlauthinfoaccerror.title = crl checking failed
certpathreviewer.crlauthinfoaccerror.text = crl checking failed: there was an error processing the authority info access extension.
certpathreviewer.crlauthinfoaccerror.summary = error processing the authority info access extension.
certpathreviewer.crlauthinfoaccerror.details = crl checking failed: there was an error processing the authority info access extension.

# error processing delta crl indicator extension
certpathreviewer.deltacrlexterror.title = crl checking failed
certpathreviewer.deltacrlexterror.text = crl checking failed: there was an error processing the delta crl indicator extension. 
certpathreviewer.deltacrlexterror.summary = error processing the delta crl indicator extension.
certpathreviewer.deltacrlexterror.details = crl checking failed: there was an error processing the delta crl indicator extension.

# error porcessing crl number extension
certpathreviewer.crlnbrexterror.title = crl checking failed
certpathreviewer.crlnbrexterror.text = crl checking failed: there was an error processing the crl number extension.
certpathreviewer.crlnbrexterror.summary = error processing the crl number extension.
certpathreviewer.crlnbrexterror.details = crl checking failed: there was an error processing the crl number extension.

# error processing crl reason code extension
certpathreviewer.crlreasonexterror.title = crl checking failed
certpathreviewer.crlreasonexterror.text = crl checking failed: there was an error processing the crl reason code extension.
certpathreviewer.crlreasonexterror.summary = error processing the crl reason code extension.
certpathreviewer.crlreasonexterror.details = crl checking failed: there was an error processing the crl reason code extension.

# error processing basic constraints extension
certpathreviewer.crlbcexterror.title = crl checking failed
certpathreviewer.crlbcexterror.text = crl checking failed: there was an error processing the basic constraints extension.
certpathreviewer.crlbcexterror.summary = error processing the basic constraints extension.
certpathreviewer.crlbcexterror.details = crl checking failed: there was an error processing the basic constraints extension.

# ca cert crl only contains user certificates
certpathreviewer.crlonlyusercert.title = crl checking failed
certpathreviewer.crlonlyusercert.text = crl checking failed: crl only contains user certificates.
certpathreviewer.crlonlyusercert.summary = crl checking failed: crl only contains user certificates.
certpathreviewer.crlonlyusercert.details = crl checking failed: crl for ca certificate only contains user certificates.

# end crl only contains ca certificates
certpathreviewer.crlonlycacert.title = crl checking failed
certpathreviewer.crlonlycacert.text = crl checking failed: crl only contains ca certificates.
certpathreviewer.crlonlycacert.summary = crl checking failed: crl only contains ca certificates.
certpathreviewer.crlonlycacert.details = crl checking failed: crl for end certificate only contains ca certificates.

# onlycontainsattributecerts boolean is asserted
certpathreviewer.crlonlyattrcert.title = crl checking failed
certpathreviewer.crlonlyattrcert.text = crl checking failed: crl only contains attribute certificates.
certpathreviewer.crlonlyattrcert.summary = crl checking failed: crl only contains attribute certificates.
certpathreviewer.crlonlyattrcert.details = crl checking failed: crl only contains attribute certificates.


## qcstatement notifications

# unkown statement
# {0} statement oid
# {1} statement as ans1sequence
certpathreviewer.qcunknownstatement.title = unknown statement in qcstatement extension 
certpathreviewer.qcunknownstatement.text = unknown statement in qcstatement extension: oid = {0}
certpathreviewer.qcunknownstatement.summary = unknown statement in qcstatement extension: oid = {0}
certpathreviewer.qcunknownstatement.details = unknown statement in qcstatement extension: oid = {0}, statement = {1}

# qclimitvalue alpha currency code
# {0} currency code
# {1} limit value
# {2} monetary value as monetaryvalue
certpathreviewer.qclimitvaluealpha.title = transaction value limit
certpathreviewer.qclimitvaluealpha.text = this certificate has a limit for the transaction value: {1,number, ###,###,###,##0.00#} {0}.
certpathreviewer.qclimitvaluealpha.summary = transaction value limit: {1,number, ###,###,###,##0.00#} {0}.
certpathreviewer.qclimitvaluealpha.details = this certificate has a limitation on the value of transaction for which this certificate can be used to the specified amount, according to the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures, as implemented in the law of the country specified in the issuer field of this certificate. the limit for this certificate is {1,number, ###,###,###,##0.00#} {0}.

# qclimitvalue numeric currency code
# {0} currency code
# {1} limit value
# {2} monetary value as monetaryvalue
certpathreviewer.qclimitvaluenum.title = transaction value limit
certpathreviewer.qclimitvaluenum.text = this certificate has a limit for the transaction value: {1,number, ###,###,###,##0.00#} of currency {0} (see rfc 4217 for currency codes).
certpathreviewer.qclimitvaluenum.summary = transaction value limit: {1,number, ###,###,###,##0.00#} of currency {0} (see rfc 4217 for currency codes).
certpathreviewer.qclimitvaluenum.details = this certificate has a limitation on the value of transaction for which this certificate can be used to the specified amount, according to the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures, as implemented in the law of the country specified in the issuer field of this certificate. the limit for this certificate is {1,number, ###,###,###,##0.00#} of currency {0} (see rfc 4217 for currency codes).

# qcsscd
certpathreviewer.qcsscd.title = qcsscd statement
certpathreviewer.qcsscd.text = (sscd) the issuer claims that for the certificate where this statement appears that the private key associated with the public key in the certificate is protected according to annex iii of the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures.
certpathreviewer.qcsscd.summary = (sscd) the issuer claims that for the certificate where this statement appears that the private key associated with the public key in the certificate is protected according to annex iii of the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures.
certpathreviewer.qcsscd.details = (sscd) the issuer claims that for the certificate where this statement appears that the private key associated with the public key in the certificate is protected according to annex iii of the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures.

# qceucompliance
certpathreviewer.qceucompliance.title = qualified certificate
certpathreviewer.qceucompliance.text = this certificate is issued as a qualified certificate according annex i and ii of the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures, as implemented in the law of the country specified in the issuer field of this certificate.
certpathreviewer.qceucompliance.summary = this certificate is issued as a qualified certificate according annex i and ii of the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures, as implemented in the law of the country specified in the issuer field of this certificate.
certpathreviewer.qceucompliance.details = this certificate is issued as a qualified certificate according annex i and ii of the directive 1999/93/ec of the european parliament and of the council of 13 december 1999 on a community framework for electronic signatures, as implemented in the law of the country specified in the issuer field of this certificate. 

## qcstatement errors

# error processing the qcstatement extension
certpathreviewer.qcstatementexterror.title = error processing the qc statements extension
certpathreviewer.qcstatementexterror.text = error processing the qc statements extension.
certpathreviewer.qcstatementexterror.summary = error processing the qc statements extension.
certpathreviewer.qcstatementexterror.details = error processing the qc statements extension.

## unknown/generic errors
certpathreviewer.unknown.title = unexpected error 
certpathreviewer.unknown.text = unexpected error {0}
certpathreviewer.unknown.summary = unexpected error 
certpathreviewer.unknown.details = unexpected error {0}

#
# crl reasons
#
unspecified = unspecified
keycompromise = key compromise
cacompromise = ca compromise
affiliationchanged = affiliation changed
superseded = superseded
cessationofoperation = cessation of operation
certificatehold = certificate hold
unknown = unknown
removefromcrl = remove from crl
privilegewithdrawn = privilege withdrawn
aacompromise = aa compromise

#
#
#
missingissuer = the missing certificate was issued by
missingserial = with the serial number
 